swagger: "2.0"
info:
  version: "0.0.1"
  title: VivaReal Coding Challenge - Spotippos
# during dev, should point to your local machine
host: 127.0.0.1:4000
# basePath prefixes all resource paths 
basePath: /v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /properties:
    x-swagger-router-controller: properties
    post:
      description: Creates a property in Spotippos world
      operationId: createProperty
      parameters:
        - name: property
          in: body
          description: TODO
          required: true
          schema:
            $ref: "#/definitions/NewProperty"
      responses:
        200:
          description: Property successfuly created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Search properties in a Spotippos world region
      operationId: searchProperty
      parameters:
        - name: ax
          in: query
          description: TODO
          required: true
          type: integer
          minimum: 0
          maximum: 1200
        - name: ay
          in: query
          description: TODO
          required: true
          type: integer
          minimum: 0
          maximum: 1000
        - name: bx
          in: query
          description: TODO
          required: true
          type: integer
          minimum: 0
          maximum: 1200
        - name: by
          in: query
          description: TODO
          required: true
          type: integer
          minimum: 0
          maximum: 1000
      responses:
        200:
          description: Properties found in region
          schema:
            $ref: "#/definitions/MultipleProperties"
  
  /properties/{propertyId}:
    x-swagger-router-controller: properties
    get:
      description: Gets a property from Spotippos world, if it exists
      operationId: getProperty
      parameters:
        - name: propertyId
          in: path
          description: TODO
          required: true
          type: string
      responses:
        200:
          description: Property found
          schema:
            $ref: "#/definitions/Property"
        404:
          description: Property not found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw


# complex objects have schema definitions
definitions:

  NewProperty:
    required:
      - x
      - y
      - title
      - price
      - description
      - beds
      - baths
      - squareMeters
    properties: &propertyBaseProperties
      x:
        type: integer
        minimum: 0
        maximum: 1400
      y:
        type: integer
        minimum: 0
        maximum: 1000
      title:
        type: string
      price:
        type: integer
      description:
        type: string
      beds:
        type: integer
        minimum: 1
        maximum: 5
      baths:
        type: integer
        minimum: 1
        maximum: 4
      squareMeters:
        type: integer
        minimum: 20
        maximum: 240


  Property:
    required:
      - id
      - x
      - y
      - title
      - price
      - description
      - beds
      - baths
      - provinces
      - squareMeters
    properties:
      id:
        type: integer
        minimum: 1
      <<: *propertyBaseProperties
      provinces:
        type: array
        items:
          type: string

  
  MultipleProperties:
    required:
      - foundProperties
      - properties
    properties:
      foundProperties:
        type: integer
      properties:
        type: array
        items:
          $ref: "#/definitions/Property"


  ErrorResponse:
    required:
      - status
      - message
    properties:
      status:
        type: integer
      message:
        type: string
        
#  HelloWorldResponse:
#    required:
#      - message
#    properties:
#      message:
#        type: string
